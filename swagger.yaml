openapi: 3.0.2
info:
  title: Task Management API
  version: 1.0.0
  description: Task Management API and its documentation. Simply log in at https://localhost:3000/ to acquire the cookie session authentication.

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionId

paths:
  /api/sessions:
    get:
      summary: Retrieve user and session information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                  sessionId:
                    type: string
              examples:
                UserSession:
                  value:
                    user: john.doe@example.com
                    sessionId: 1234567890
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
              example: Unauthorized

    post:
      summary: Log in a user and create a session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: john.doe@example.com
              password: password123
      responses:
        '200':
          description: Session created
          content:
            text/html:
              schema:
                type: string
              example: Logged in successfully
        '400':
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
              example: Email and password are required
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
              example: Invalid email or password

    delete:
      summary: Log out the current user and end the session
      responses:
        '200':
          description: Session destroyed successfully
          content:
            text/html:
              schema:
                type: string
              example: Session destroyed successfully
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
              example: Either session has expired or you are not logged in
        '500':
          description: Internal Server Error
          content:
            text/html:
              schema:
                type: string
              example: Internal Server Error

  /api/users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: john.doe@example.com
              password: password123
      responses:
        '201':
          description: Created
          content:
            text/html:
              schema:
                type: string
              example: Account created successfully
        '400':
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
              example: Email and password are required
        '409':
          description: Conflict
          content:
            text/html:
              schema:
                type: string
              example: An account with this email already exists

  /api/tasks:
    post:
      summary: Create a new task
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
            example:
              title: Task 1
      responses:
        '201':
          description: Created
          content:
            text/html:
              schema:
                type: string
              example: Task created successfully
        '400':
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
              example: Bad Request
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
              example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            text/html:
              schema:
                type: string
              example: Internal Server Error

    get:
      summary: Get all tasks for a user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
              example: []
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
              example: Unauthorized

  /api/tasks/{taskId}:
    delete:
      summary: Delete a task
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          example: '1'
      responses:
        '204':
          description: No Content
          content:
            text/html:
              schema:
                type: string
              example: Task deleted successfully
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
              example: Unauthorized
        '404':
          description: Not Found
          content:
            text/html:
              schema:
                type: string
              example: Task not found

    put:
      summary: Update a task
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
            example:
              title: Updated Task
      responses:
        '204':
          description: No Content
          content:
            text/html:
              schema:
                type: string
              example: Task updated successfully
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
              example: Unauthorized
        '404':
          description: Not Found
          content:
            text/html:
              schema:
                type: string
              example: Task not found